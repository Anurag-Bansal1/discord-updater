#!/bin/bash

set -e  # Exit on error

# Check if dpkg is available (only works on Debian-based systems)
if ! command -v dpkg >/dev/null 2>&1; then
	echo "❌ This script only works on Debian-based systems (Ubuntu, Linux Mint, etc)."
	exit 1
fi

print_help() {
	cat <<EOF
Discord Updater – Installs or updates Discord on Debian-based systems.

Usage:
  discord-updater [options]

Options:
  -y, --yes, -f, --force    Skip confirmation prompt (reinstall even if up to date)
  -t, --test                Execute a dry run to check versions
  -h, --help                Show this help message

Examples:
  ./discord-updater         # Normal usage
  ./discord-updater -y      # Force reinstall if latest is already installed

Made by Anurag Bansal <https://github.com/Anurag-Bansal1>
EOF
	exit 0
}

# Parse flags
FORCE=false
DRY_RUN=false

for arg in "$@"; do
	case "$arg" in
		-y|--yes|-f|--force) FORCE=true ;;
		-t|--test) DRY_RUN=true ;;
		-h|--help) print_help ;;
	esac
done

# Help message


TEMP_DIR="/dev/shm/discord-updater"
DEB_FILE="$TEMP_DIR/discord.deb"
DISCORD_URL="https://discord.com/api/download/stable?platform=linux&format=deb"

echo "🔍 Checking currently installed version of Discord..."
if command -v discord >/dev/null 2>&1; then
	CURRENT_VERSION=$(dpkg -s discord 2>/dev/null | grep '^Version:' | awk '{print $2}')
	echo "🧾 Installed version: $CURRENT_VERSION"
else
	echo "⚠️ Discord is not installed. Will install it now."
	CURRENT_VERSION="none"
fi

echo "🌐 Fetching latest version info from Discord..."
LATEST_DEB_URL=$(wget -q --server-response --max-redirect=0 "$DISCORD_URL" 2>&1 | grep -i "location:" | awk '{print $2}' | tr -d '\r')
LATEST_VERSION=$(basename "$LATEST_DEB_URL" | grep -oP '[0-9]+\.[0-9]+\.[0-9]+')

if [ -z "$LATEST_VERSION" ]; then
	echo "❌ Failed to determine the latest version of Discord."
	exit 1
fi

echo "🆕 Latest available version: $LATEST_VERSION"

if [ "$DRY_RUN" = true ]; then
	echo "🚫 Dry run mode active. No changes will be made."
	if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
		echo "✅ Discord is already up to date (v$CURRENT_VERSION)."
	else
		echo "⬆️ Discord can be updated from $CURRENT_VERSION to $LATEST_VERSION"
	fi
	exit 0
fi

if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
	echo "✅ You already have the latest version of Discord."
	if [ "$FORCE" = false ]; then
		while true; do
			read -r -p "Do you still want to reinstall it? (Y/n): " confirm
			confirm=${confirm:-y}
			case "$confirm" in
				[Yy]) break ;;
				[Nn]) exit 0 ;;
				*) echo "Please answer with 'y' or 'n'." ;;
			esac
		done
	else
		echo "🔁 Reinstalling discord."
	fi
else
	echo "⬆️ Updating Discord to version $LATEST_VERSION..."
fi

echo "📁 Creating temporary folder to avoid any conflict..."
mkdir -p "$TEMP_DIR"
trap "rm -rf '$TEMP_DIR'" EXIT

echo "📥 Downloading Discord .deb package..."
wget -q --show-progress -O "$DEB_FILE" "$DISCORD_URL"

echo "📦 Installing Discord (you might be prompted for your password)..."
if sudo dpkg -i "$DEB_FILE" >/dev/null 2>&1; then
	echo "✅ Installed successfully with dpkg."
else
	echo "⚠️ Missing dependencies detected. Fixing..."
	sudo apt -f install -y >/dev/null
	echo "✅ Installation completed after fixing dependencies."
fi

if [ "$CURRENT_VERSION" = "none" ]; then
	echo "🎉 Done! Discord version $LATEST_VERSION is now installed."
else
	echo "🎉 Done! Discord updated: $CURRENT_VERSION → $LATEST_VERSION."
fi

# Made by Anurag Bansal <https://github.com/Anurag-Bansal1>
